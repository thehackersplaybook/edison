"""
Models module for Edison API configurations and agent outputs.

This module contains Pydantic models used for configuration management
and structuring agent outputs in the Edison system.

Author: Aditya Patange (https://www.github.com/AdiPat)
"""

from pydantic import BaseModel
from typing import List


class EdisonApiKeyConfig(BaseModel):
    """Configuration for storing API keys required by Edison.

    This class manages the API keys needed for various services used by Edison,
    including OpenAI, Firecrawl, and Serper.

    Attributes:
        openai_api_key (str): API key for OpenAI services.
        firecrawl_api_key (str): API key for Firecrawl services.
        serper_api_key (str): API key for Serper services.
    """

    openai_api_key: str
    firecrawl_api_key: str
    serper_api_key: str


class ExpanderAgentOutput(BaseModel):
    """Output container for the Expander Agent's results.

    This class structures the output data produced by the Expander Agent,
    primarily storing related search queries.

    Attributes:
        related_queries (List[str]): List of related search queries generated
            by the Expander Agent.
    """

    related_queries: List[str]


class QnaItem(BaseModel):
    """Container for a single QnA item.

    This class represents a single question and its corresponding answer.

    Attributes:
        question (str): The question text.
        answer (str): The answer text.
    """

    question: str
    answer: str


class QnaAgentOutput(BaseModel):
    """Output container for the Questioning Agent's results.

    This class structures the output data produced by the Questioning Agent,
    primarily storing the generated questions.

    Attributes:
        questions (List[str]): List of questions generated by the Questioning Agent.
    """

    qna_pairs: List[QnaItem]
